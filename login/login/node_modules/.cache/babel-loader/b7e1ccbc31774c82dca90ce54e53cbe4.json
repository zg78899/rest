{"ast":null,"code":"import _slicedToArray from \"/Users/pokeoseu/Desktop/React-Self-Study/login/login/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pokeoseu/Desktop/React-Self-Study/login/login/src/component/SignIn.jsx\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { signIn } from '../lib/api';\nimport Cookies from 'js-cookie';\n\nconst SignIn = props => {\n  const _useForm = useForm(),\n        handleSubmit = _useForm.handleSubmit,\n        register = _useForm.register,\n        errors = _useForm.errors;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 1),\n        AlreadyExist = _useState2[0];\n\n  const onSubmit = async values => {\n    const _ref = await signIn(values),\n          success = _ref.success,\n          token = _ref.token;\n\n    if (success) {\n      Cookies.set('session', token.split(' ')[1]);\n      props.history.push('/');\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"userid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"userid\",\n    name: \"username\",\n    ref: register({\n      required: 'Required',\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), errors.username && errors.username.message), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"password\",\n    name: \"passowrd\",\n    ref: register({\n      required: 'Required'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), errors.password && '비밀번호가 일치하지않습니다', AlreadyExist && '아이디가 이미 존재합니다.', React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Sign UP\")));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/pokeoseu/Desktop/React-Self-Study/login/login/src/component/SignIn.jsx"],"names":["React","useState","useForm","signIn","Cookies","SignIn","props","handleSubmit","register","errors","AlreadyExist","onSubmit","values","success","token","set","split","history","push","required","pattern","value","message","username","password"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAAQC,MAAR,QAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA,mBACcJ,OAAO,EADrB;AAAA,QACjBK,YADiB,YACjBA,YADiB;AAAA,QACJC,QADI,YACJA,QADI;AAAA,QACKC,MADL,YACKA,MADL;;AAAA,oBAEDR,QAAQ,CAAC,KAAD,CAFP;AAAA;AAAA,QAEjBS,YAFiB;;AAIxB,QAAMC,QAAQ,GAAC,MAAOC,MAAP,IAAgB;AAAA,iBACP,MAAMT,MAAM,CAACS,MAAD,CADL;AAAA,UACtBC,OADsB,QACtBA,OADsB;AAAA,UACdC,KADc,QACdA,KADc;;AAG7B,QAAGD,OAAH,EAAW;AACTT,MAAAA,OAAO,CAACW,GAAR,CAAY,SAAZ,EAAsBD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAtB;AACAV,MAAAA,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD;AACF,GAPD;;AAQE,SACE,0CACA;AAAM,IAAA,QAAQ,EAAEX,YAAY,CAACI,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACA,IAAA,EAAE,EAAC,QADH;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,GAAG,EACDH,QAAQ,CAAC;AACPW,MAAAA,QAAQ,EAAC,UADF;AAEPC,MAAAA,OAAO,EAAC;AACNC,QAAAA,KAAK,EAAE,2CADD;AAENC,QAAAA,OAAO,EAAE;AAFH;AAFD,KAAD,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaGb,MAAM,CAACc,QAAP,IAAmBd,MAAM,CAACc,QAAP,CAAgBD,OAbtC,CADF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACA,IAAA,EAAE,EAAC,UADH;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,GAAG,EACDd,QAAQ,CAAC;AACPW,MAAAA,QAAQ,EAAC;AADF,KAAD,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,EA2BGV,MAAM,CAACe,QAAP,IAAmB,gBA3BtB,EA4BGd,YAAY,IAAI,gBA5BnB,EA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,EA8BE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA9BF,CADA,CADF;AAoCD,CAhDH;;AAiDA,eAAeL,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport {useForm} from 'react-hook-form';\nimport {signIn} from '../lib/api';\nimport Cookies from 'js-cookie';\n\nconst SignIn = (props) => {\n  const {handleSubmit,register,errors,}=useForm();\n  const [AlreadyExist] = useState(false);\n\n  const onSubmit=async (values)=>{\n    const {success,token}=await signIn(values);\n\n    if(success){\n      Cookies.set('session',token.split(' ')[1]);\n      props.history.push('/');\n    }\n  }\n    return (\n      <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label htmlFor=\"userid\">\n          <input \n          id=\"userid\"\n          name=\"username\"\n          ref={\n            register({\n              required:'Required',\n              pattern:{\n                value :/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                message: \"invalid email address\"\n              }\n            })\n          }/>\n          {errors.username && errors.username.message}\n        </label>\n        <br/>\n        <label htmlFor=\"password\">\n          <input\n          id=\"password\"\n          name=\"passowrd\"\n          ref={\n            register({\n              required:'Required'\n            })\n          }/>\n        </label>\n        {errors.password && '비밀번호가 일치하지않습니다'}\n        {AlreadyExist && '아이디가 이미 존재합니다.'}\n        <br/>\n        <button type=\"submit\">Sign UP</button>\n      </form>\n      </>\n    )\n  }\nexport default SignIn;\n\n"]},"metadata":{},"sourceType":"module"}