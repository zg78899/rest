import { DRAFT_STATE } from "./common";
import { ImmerScope } from "./scope";
interface ES5Draft {
    [DRAFT_STATE]: ES5State;
}
interface ES5State<T = any> {
    scope: ImmerScope;
    modified: boolean;
    finalizing: boolean;
    finalized: boolean;
    assigned: Map<any, any> | {
        [key: string]: any;
    };
    parent: ES5State;
    base: T;
    draft: T & ES5Draft;
    drafts: Map<any, any> | null;
    copy: T | null;
    revoke(): any;
    revoked: boolean;
}
export declare function willFinalize(scope: ImmerScope, result: any, isReplaced: boolean): void;
export declare function createProxy<T>(base: T, parent: ES5State): ES5Draft;
export {};
