{"ast":null,"code":"import _defineProperty from \"/Users/pokeoseu/react-tutorial/begin-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/pokeoseu/react-tutorial/begin-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pokeoseu/react-tutorial/begin-react/src/inputSample.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef } from 'react';\n/**useRef는 React에서 dom에 직접 접근하는 방법 */\n\nfunction InputSample() {\n  const _useState = useState({\n    name: '',\n    nickname: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputs = _useState2[0],\n        setInputs = _useState2[1];\n\n  const nameInput = useRef();\n  const name = inputs.name,\n        nickname = inputs.nickname;\n\n  const onChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setInputs(_objectSpread({}, inputs, {\n      [name]: value //name:value라고 하면 문다열 그자체가 들어가게 된다.[name]:value 처럼 []을 사용하게 되면 키 값이 무언인지에 따라 다른 키 값이 달라진다.\n      //name의 값은 name 될수도 nickname이 될수도있다\n\n    }));\n  }; //  console.log(e.target.name);\n  //  console.log(e.target.value);\n\n\n  const onReset = () => {\n    setInputs({\n      name: '',\n      nickname: ''\n    });\n    nameInput.current.focus(); //current가 바로 dom을 가르키게 된다.\n    //dom api중에서 focus()가 있다.호출하게 되면 focus가 잡히게 된다.\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"name\",\n    placeholder: \"\\uC774\\uB984\",\n    onChange: onChange,\n    value: name,\n    ref: nameInput\n    /**우리가 직접 dom에 직접 접근할수잇게 된다 */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"nickname\",\n    placeholder: \"\\uB2C9\\uB124\\uC784\",\n    onChange: onChange,\n    value: nickname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"\\uCD08\\uAE30\\uD654\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"\\uAC12: \"), name, \" (\", nickname, \")\"));\n}\n\nexport default InputSample;","map":{"version":3,"sources":["/Users/pokeoseu/react-tutorial/begin-react/src/inputSample.js"],"names":["React","useState","useRef","InputSample","name","nickname","inputs","setInputs","nameInput","onChange","e","target","value","onReset","current","focus"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,MAAvB,QAAoC,OAApC;AAA6C;;AAE7C,SAASC,WAAT,GAAuB;AAAA,oBACIF,QAAQ,CAAC;AAChCG,IAAAA,IAAI,EAAC,EAD2B;AAEhCC,IAAAA,QAAQ,EAAC;AAFuB,GAAD,CADZ;AAAA;AAAA,QACdC,MADc;AAAA,QACPC,SADO;;AAKrB,QAAMC,SAAS,GAACN,MAAM,EAAtB;AALqB,QAOdE,IAPc,GAOCE,MAPD,CAOdF,IAPc;AAAA,QAOTC,QAPS,GAOCC,MAPD,CAOTD,QAPS;;AASrB,QAAMI,QAAQ,GAAIC,CAAD,IAAO;AAAA,sBACHA,CAAC,CAACC,MADC;AAAA,UACfP,IADe,aACfA,IADe;AAAA,UACVQ,KADU,aACVA,KADU;AAErBL,IAAAA,SAAS,mBACLD,MADK;AAER,OAACF,IAAD,GAAOQ,KAFC,CAEK;AACb;;AAHQ,OAAT;AAKA,GAPH,CATqB,CAiBrB;AACA;;;AACA,QAAMC,OAAO,GAAC,MAAI;AAChBN,IAAAA,SAAS,CAAC;AACRH,MAAAA,IAAI,EAAC,EADG;AAERC,MAAAA,QAAQ,EAAC;AAFD,KAAD,CAAT;AAIAG,IAAAA,SAAS,CAACM,OAAV,CAAkBC,KAAlB,GALgB,CAKU;AAC1B;AAED,GARD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACC,IAAA,IAAI,EAAC,MADN;AAEE,IAAA,WAAW,EAAC,cAFd;AAGG,IAAA,QAAQ,EAAEN,QAHb;AAII,IAAA,KAAK,EAAEL,IAJX;AAKI,IAAA,GAAG,EAAEI;AAAW;AALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACC,IAAA,IAAI,EAAC,UADN;AAEE,IAAA,WAAW,EAAC,oBAFd;AAGG,IAAA,QAAQ,EAAEC,QAHb;AAII,IAAA,KAAK,EAAEJ,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAcE;AAAQ,IAAA,OAAO,EAAEQ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGGT,IAHH,QAGWC,QAHX,MAfF,CADF;AAuBD;;AACD,eAAeF,WAAf","sourcesContent":["import React,{useState,useRef} from 'react'; /**useRef는 React에서 dom에 직접 접근하는 방법 */\n\nfunction InputSample() {\n  const [inputs,setInputs]=useState({\n    name:'',\n    nickname:'',\n  });\n  const nameInput=useRef();\n\n  const {name,nickname}=inputs;\n\n  const onChange = (e) => {\n    const {name,value}=e.target;\n     setInputs({\n      ...inputs,\n      [name]:value,//name:value라고 하면 문다열 그자체가 들어가게 된다.[name]:value 처럼 []을 사용하게 되면 키 값이 무언인지에 따라 다른 키 값이 달라진다.\n      //name의 값은 name 될수도 nickname이 될수도있다\n     });\n    };\n  //  console.log(e.target.name);\n  //  console.log(e.target.value);\n  const onReset=()=>{\n    setInputs({\n      name:'',\n      nickname:'',\n    });\n    nameInput.current.focus();//current가 바로 dom을 가르키게 된다.\n    //dom api중에서 focus()가 있다.호출하게 되면 focus가 잡히게 된다.\n\n  };\n  return (\n    <div>\n      <input\n       name=\"name\"\n        placeholder=\"이름\"\n         onChange={onChange}\n          value={name}\n          ref={nameInput} /**우리가 직접 dom에 직접 접근할수잇게 된다 */\n        />{/**setText의 값이 바뀌게 되면 text의 값이 바뀌게 하려면 value={text}을 입력해야한다.*/}\n      <input\n       name=\"nickname\"\n        placeholder=\"닉네임\"\n         onChange={onChange}\n          value={nickname}\n      />\n      <button onClick={onReset}>초기화</button>\n      <div>\n        <b>값: </b>\n        {/* 이름 (닉네임) */}\n        {name} ({nickname})\n    </div>\n    </div>\n  )\n}\nexport default InputSample;\n"]},"metadata":{},"sourceType":"module"}