{"ast":null,"code":"import _slicedToArray from \"/Users/pokeoseu/react-tutorial/begin-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pokeoseu/react-tutorial/begin-react/src/CreateUser.js\";\nimport React, { useRef, useContext } from 'react';\nimport UserDispatch from './App';\nimport useInputs from './useInputs';\n\nconst CreateUser = () => {\n  //필요한 값들을 props로 받아옴\n  const _useInputs = useInputs({\n    username: '',\n    email: ''\n  }),\n        _useInputs2 = _slicedToArray(_useInputs, 3),\n        _useInputs2$ = _useInputs2[0],\n        username = _useInputs2$.username,\n        email = _useInputs2$.email,\n        onChange = _useInputs2[1],\n        reset = _useInputs2[2];\n\n  const nextId = useRef(4);\n  const dispatch = useContext(UserDispatch);\n\n  const onCreate = () => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    nextId.current += 1;\n    reset();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"username\",\n    placeholder: \"\\uACC4\\uC815\\uBA85\",\n    onChange: onChange,\n    value: username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"email\",\n    placeholder: \"\\uC774\\uBA54\\uC77C\",\n    onChange: onChange,\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onCreate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\\uB4F1\\uB85D\"));\n};\n\nexport default React.memo(CreateUser); //React.memo을 해주면  props가 바뀌었을때만 렌더링해준다.","map":{"version":3,"sources":["/Users/pokeoseu/react-tutorial/begin-react/src/CreateUser.js"],"names":["React","useRef","useContext","UserDispatch","useInputs","CreateUser","username","email","onChange","reset","nextId","dispatch","onCreate","type","user","id","current","memo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAOC,YAAP,MAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAC;AAAD,qBACwBD,SAAS,CAAC;AACvDE,IAAAA,QAAQ,EAAE,EAD6C;AAEvDC,IAAAA,KAAK,EAAE;AAFgD,GAAD,CADjC;AAAA;AAAA;AAAA,QACdD,QADc,gBACdA,QADc;AAAA,QACJC,KADI,gBACJA,KADI;AAAA,QACKC,QADL;AAAA,QACeC,KADf;;AAMvB,QAAMC,MAAM,GAAGT,MAAM,CAAC,CAAD,CAArB;AAEA,QAAMU,QAAQ,GAAGT,UAAU,CAACC,YAAD,CAA3B;;AAEA,QAAMS,QAAQ,GAAG,MAAM;AACrBD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAEL,MAAM,CAACM,OADP;AAEJV,QAAAA,QAFI;AAGJC,QAAAA;AAHI;AAFC,KAAD,CAAR;AAQAG,IAAAA,MAAM,CAACM,OAAP,IAAkB,CAAlB;AACAP,IAAAA,KAAK;AACN,GAXD;;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,oBAFd;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,KAAK,EAAEF,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,oBAFd;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,KAAK,EAAED,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE;AAAQ,IAAA,OAAO,EAAEK,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,CADF;AAiBD,CAxCD;;AAyCA,eAAeZ,KAAK,CAACiB,IAAN,CAAWZ,UAAX,CAAf,C,CAAsC","sourcesContent":["import React, { useRef, useContext } from 'react';\nimport UserDispatch from './App';\nimport useInputs from './useInputs';\n\nconst CreateUser = () => {//필요한 값들을 props로 받아옴\n  const [{ username, email }, onChange, reset] = useInputs({\n    username: '',\n    email: ''\n  })\n  \n  const nextId = useRef(4);\n\n  const dispatch = useContext(UserDispatch);\n\n  const onCreate = () => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email,\n      }\n    });\n    nextId.current += 1;\n    reset();\n  }\n\n  return (\n    <div>\n      <input\n        name=\"username\"\n        placeholder=\"계정명\"\n        onChange={onChange}\n        value={username} />\n\n      <input\n        name=\"email\"\n        placeholder=\"이메일\"\n        onChange={onChange}\n        value={email} />\n\n      <button onClick={onCreate}>등록</button>\n    </div>\n  )\n}\nexport default React.memo(CreateUser);//React.memo을 해주면  props가 바뀌었을때만 렌더링해준다.\n\n"]},"metadata":{},"sourceType":"module"}