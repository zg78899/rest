{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nexport { Severity, Status } from '@sentry/types';\nexport { addGlobalEventProcessor, addBreadcrumb, captureException, captureEvent, captureMessage, configureScope, getHubFromCarrier, getCurrentHub, Hub, Scope, setContext, setExtra, setExtras, setTag, setTags, setUser, withScope } from '@sentry/core';\nexport { BrowserClient } from './client';\nexport { defaultIntegrations, forceLoad, init, lastEventId, onLoad, showReportDialog, flush, close, wrap } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\nvar windowIntegrations = {}; // This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\n\nvar _window = getGlobalObject();\n\nif (_window.Sentry && _window.Sentry.Integrations) {\n  windowIntegrations = _window.Sentry.Integrations;\n} // tslint:enable: no-unsafe-any\n\n\nvar INTEGRATIONS = tslib_1.__assign({}, windowIntegrations, CoreIntegrations, BrowserIntegrations);\n\nexport { INTEGRATIONS as Integrations, Transports };","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";AAAA,SAOE,QAPF,EAUE,MAVF,QAaO,eAbP;AAeA,SACE,uBADF,EAEE,aAFF,EAGE,gBAHF,EAIE,YAJF,EAKE,cALF,EAME,cANF,EAOE,iBAPF,EAQE,aARF,EASE,GATF,EAUE,KAVF,EAWE,UAXF,EAYE,QAZF,EAaE,SAbF,EAcE,MAdF,EAeE,OAfF,EAgBE,OAhBF,EAiBE,SAjBF,QAkBO,cAlBP;AAqBA,SAAS,aAAT,QAAmD,UAAnD;AACA,SAAS,mBAAT,EAA8B,SAA9B,EAAyC,IAAzC,EAA+C,WAA/C,EAA4D,MAA5D,EAAoE,gBAApE,EAAsF,KAAtF,EAA6F,KAA7F,EAAoG,IAApG,QAAgH,OAAhH;AACA,SAAS,QAAT,EAAmB,WAAnB,QAAsC,WAAtC;AAEA,SAAS,YAAY,IAAI,gBAAzB,QAAiD,cAAjD;AACA,SAAS,eAAT,QAAgC,eAAhC;AAEA,OAAO,KAAK,mBAAZ,MAAqC,gBAArC;AACA,OAAO,KAAK,UAAZ,MAA4B,cAA5B;AAEA,IAAI,kBAAkB,GAAG,EAAzB,C,CAEA;AACA;;AACA,IAAM,OAAO,GAAG,eAAe,EAA/B;;AACA,IAAI,OAAO,CAAC,MAAR,IAAkB,OAAO,CAAC,MAAR,CAAe,YAArC,EAAmD;AACjD,EAAA,kBAAkB,GAAG,OAAO,CAAC,MAAR,CAAe,YAApC;AACD,C,CACD;;;AAEA,IAAM,YAAY,GAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EACb,kBADa,EAEb,gBAFa,EAGb,mBAHa,CAAlB;;AAMA,SAAS,YAAY,IAAI,YAAzB,EAAuC,UAAvC","sourcesContent":["export {\n  Breadcrumb,\n  Request,\n  SdkInfo,\n  Event,\n  Exception,\n  Response,\n  Severity,\n  StackFrame,\n  Stacktrace,\n  Status,\n  Thread,\n  User,\n} from '@sentry/types';\n\nexport {\n  addGlobalEventProcessor,\n  addBreadcrumb,\n  captureException,\n  captureEvent,\n  captureMessage,\n  configureScope,\n  getHubFromCarrier,\n  getCurrentHub,\n  Hub,\n  Scope,\n  setContext,\n  setExtra,\n  setExtras,\n  setTag,\n  setTags,\n  setUser,\n  withScope,\n} from '@sentry/core';\n\nexport { BrowserOptions } from './backend';\nexport { BrowserClient, ReportDialogOptions } from './client';\nexport { defaultIntegrations, forceLoad, init, lastEventId, onLoad, showReportDialog, flush, close, wrap } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\nconst _window = getGlobalObject<Window>();\nif (_window.Sentry && _window.Sentry.Integrations) {\n  windowIntegrations = _window.Sentry.Integrations;\n}\n// tslint:enable: no-unsafe-any\n\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  ...CoreIntegrations,\n  ...BrowserIntegrations,\n};\n\nexport { INTEGRATIONS as Integrations, Transports };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}