{"ast":null,"code":"import _objectSpread from \"/Users/pokeoseu/learn-redux/learn-redux/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createStore } from 'redux';\nconst INITIAL_STATE = {\n  counter: 0,\n  text: '',\n  list: []\n};\nconst INCRESE = 'INCRESE';\nconst DECREASE = 'DECREASE';\nconst CHANGE_TEXT = 'CHANGE_TEXT';\nconst ADD_TO_LIST = 'ADD_TO_LIST';\n\nconst increse = () => ({\n  //액션 생성자 함수를 생성했다.\n  type: INCRESE\n});\n\nconst decrease = () => ({\n  type: DECREASE\n});\n\nconst changeText = text => ({\n  type: CHANGE_TEXT,\n  text\n});\n\nconst addToList = item => ({\n  type: ADD_TO_LIST,\n  item\n});\n\nfunction reducer(state = INITIAL_STATE, action) {\n  //state에 기본값을 설정한다.redux에서 초기상태를 만들때 reducer을 한번 호출한다.\n  // 근데 그시점에 state가 undefined이면 deafult return undefined 되면서 초기상태가 만들어지지 않는다.\n  // 그래서 에서 undefined일때 INITIAL_STATE을 출력하게끔 초기값을 설정해준다.\n  switch (action.type) {\n    case INCRESE:\n      return _objectSpread({}, state, {\n        counter: state.counter + 1\n      });\n\n    case DECREASE:\n      return _objectSpread({}, state, {\n        counter: state.counter - 1\n      });\n\n    case CHANGE_TEXT:\n      return _objectSpread({}, state, {\n        text: action.text\n      });\n\n    case ADD_TO_LIST:\n      return _objectSpread({}, state, {\n        list: state.list.concat(action.item)\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer); //store가 만들어짐\n\nconsole.log(store.getState()); //store.getState()는 현재 store안에 있는 상태를 조회한다.\n\nconst listener = () => {\n  const state = store.getState();\n  console.log(state);\n};\n\nconst unsubscribe = store.subscribe(listener); //store에 구독한다.\n// unsubscribe();//구독을 해제하고싶은 경우에는 unsubscribe을 호출한다.//store.subscribe하면 unsubscribe라는 함수를 반환한다.\n\nstore.dispatch(increse()); //구독을 하고나서 action들을 dispatch한다. action이 dispatch할 때마다  subscribe 함수가 호출된다.console.log()가 출력이 된다.\n\nstore.dispatch(decrease());\nstore.dispatch(changeText('안녕하세요'));\nstore.dispatch(addToList({\n  id: 1,\n  text: '와우'\n}));\nwindow.store = store;","map":{"version":3,"sources":["/Users/pokeoseu/learn-redux/learn-redux/src/exercise.js"],"names":["createStore","INITIAL_STATE","counter","text","list","INCRESE","DECREASE","CHANGE_TEXT","ADD_TO_LIST","increse","type","decrease","changeText","addToList","item","reducer","state","action","concat","store","console","log","getState","listener","unsubscribe","subscribe","dispatch","id","window"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,CADW;AAEpBC,EAAAA,IAAI,EAAE,EAFc;AAGpBC,EAAAA,IAAI,EAAE;AAHc,CAAtB;AAKA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,OAAO,GAAG,OAAO;AAAC;AACtBC,EAAAA,IAAI,EAAEL;AADe,CAAP,CAAhB;;AAIA,MAAMM,QAAQ,GAAG,OAAO;AACtBD,EAAAA,IAAI,EAAEJ;AADgB,CAAP,CAAjB;;AAIA,MAAMM,UAAU,GAAGT,IAAI,KAAK;AAC1BO,EAAAA,IAAI,EAAEH,WADoB;AAE1BJ,EAAAA;AAF0B,CAAL,CAAvB;;AAKA,MAAMU,SAAS,GAAGC,IAAI,KAAK;AACzBJ,EAAAA,IAAI,EAAEF,WADmB;AAEzBM,EAAAA;AAFyB,CAAL,CAAtB;;AAKA,SAASC,OAAT,CAAiBC,KAAK,GAAGf,aAAzB,EAAwCgB,MAAxC,EAAgD;AAC9C;AACA;AACA;AACA,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKL,OAAL;AACE,+BACKW,KADL;AAEEd,QAAAA,OAAO,EAAEc,KAAK,CAACd,OAAN,GAAgB;AAF3B;;AAIF,SAAKI,QAAL;AACE,+BACKU,KADL;AAEEd,QAAAA,OAAO,EAAEc,KAAK,CAACd,OAAN,GAAgB;AAF3B;;AAIF,SAAKK,WAAL;AACE,+BACKS,KADL;AAEEb,QAAAA,IAAI,EAAEc,MAAM,CAACd;AAFf;;AAIF,SAAKK,WAAL;AACE,+BACKQ,KADL;AAEEZ,QAAAA,IAAI,EAAEY,KAAK,CAACZ,IAAN,CAAWc,MAAX,CAAkBD,MAAM,CAACH,IAAzB;AAFR;;AAKF;AACE,aAAOE,KAAP;AAvBJ;AA0BD;;AACD,MAAMG,KAAK,GAACnB,WAAW,CAACe,OAAD,CAAvB,C,CAAiC;;AACjCK,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ,E,CAA8B;;AAE9B,MAAMC,QAAQ,GAAG,MAAK;AACpB,QAAMP,KAAK,GAAGG,KAAK,CAACG,QAAN,EAAd;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD,CAHD;;AAIA,MAAMQ,WAAW,GAAGL,KAAK,CAACM,SAAN,CAAgBF,QAAhB,CAApB,C,CAA8C;AAC9C;;AAEAJ,KAAK,CAACO,QAAN,CAAejB,OAAO,EAAtB,E,CAA0B;;AAC1BU,KAAK,CAACO,QAAN,CAAef,QAAQ,EAAvB;AACAQ,KAAK,CAACO,QAAN,CAAed,UAAU,CAAC,OAAD,CAAzB;AACAO,KAAK,CAACO,QAAN,CAAeb,SAAS,CAAC;AAACc,EAAAA,EAAE,EAAC,CAAJ;AAAMxB,EAAAA,IAAI,EAAC;AAAX,CAAD,CAAxB;AAEAyB,MAAM,CAACT,KAAP,GAAaA,KAAb","sourcesContent":["import { createStore } from 'redux';\n\nconst INITIAL_STATE = {\n  counter: 0,\n  text: '',\n  list: []\n};\nconst INCRESE = 'INCRESE';\nconst DECREASE = 'DECREASE';\nconst CHANGE_TEXT = 'CHANGE_TEXT';\nconst ADD_TO_LIST = 'ADD_TO_LIST';\n\nconst increse = () => ({//액션 생성자 함수를 생성했다.\n  type: INCRESE\n});\n\nconst decrease = () => ({\n  type: DECREASE\n});\n\nconst changeText = text => ({\n  type: CHANGE_TEXT,\n  text\n});\n\nconst addToList = item => ({\n  type: ADD_TO_LIST,\n  item\n});\n\nfunction reducer(state = INITIAL_STATE, action) {\n  //state에 기본값을 설정한다.redux에서 초기상태를 만들때 reducer을 한번 호출한다.\n  // 근데 그시점에 state가 undefined이면 deafult return undefined 되면서 초기상태가 만들어지지 않는다.\n  // 그래서 에서 undefined일때 INITIAL_STATE을 출력하게끔 초기값을 설정해준다.\n  switch (action.type) {\n    case INCRESE:\n      return {\n        ...state,\n        counter: state.counter + 1\n      };\n    case DECREASE:\n      return {\n        ...state,\n        counter: state.counter - 1\n      }\n    case CHANGE_TEXT:\n      return {\n        ...state,\n        text: action.text\n      };\n    case ADD_TO_LIST:\n      return {\n        ...state,\n        list: state.list.concat(action.item)\n      }\n\n    default:\n      return state;\n\n  }\n}\nconst store=createStore(reducer);//store가 만들어짐\nconsole.log(store.getState());//store.getState()는 현재 store안에 있는 상태를 조회한다.\n\nconst listener = () =>{\n  const state = store.getState();\n  console.log(state);\n}\nconst unsubscribe = store.subscribe(listener);//store에 구독한다.\n// unsubscribe();//구독을 해제하고싶은 경우에는 unsubscribe을 호출한다.//store.subscribe하면 unsubscribe라는 함수를 반환한다.\n\nstore.dispatch(increse());//구독을 하고나서 action들을 dispatch한다. action이 dispatch할 때마다  subscribe 함수가 호출된다.console.log()가 출력이 된다.\nstore.dispatch(decrease());\nstore.dispatch(changeText('안녕하세요'));\nstore.dispatch(addToList({id:1,text:'와우'}));\n\nwindow.store=store;\n\n\n"]},"metadata":{},"sourceType":"module"}