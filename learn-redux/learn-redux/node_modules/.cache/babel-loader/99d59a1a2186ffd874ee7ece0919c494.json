{"ast":null,"code":"import _objectSpread from \"/Users/pokeoseu/learn-redux/learn-redux/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconst SET_DIFF = 'counter/SET_DIFF'; //ducks패턴을 사용하는경우 문자열 앞에 접두사를 다른 모듈과 중뵥을 막기 위해\n\nconst INCREASE = 'counter/INCREASE';\nconst DECREASE = 'counter/DECREASE';\nexport const increase = () => ({\n  type: INCREASE\n});\nexport const decrease = () => ({\n  type: DECREASE\n});\nexport const setDiff = diff => ({\n  type: SET_DIFF,\n  diff\n}); //diff는 한번에 증가시킬 숫자를 의미한다.\n\nconst initialState = {\n  number: 0,\n  diff: 1\n};\nexport default function counter(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIFF:\n      return _objectSpread({}, state, {\n        diff: action.diff //action생성함수에 있는 diff을 받아서 더해주겠다.\n\n      });\n\n    case INCREASE:\n      return _objectSpread({}, state, {\n        number: state.number + state.diff\n      });\n\n    case DECREASE:\n      return _objectSpread({}, state, {\n        number: state.number - state.diff\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/pokeoseu/learn-redux/learn-redux/src/modules/counter.js"],"names":["SET_DIFF","INCREASE","DECREASE","increase","type","decrease","setDiff","diff","initialState","number","counter","state","action"],"mappings":";AAAA,MAAMA,QAAQ,GAAG,kBAAjB,C,CAAoC;;AACpC,MAAMC,QAAQ,GAAC,kBAAf;AACA,MAAMC,QAAQ,GAAC,kBAAf;AAEA,OAAO,MAAMC,QAAQ,GAAC,OAAK;AAACC,EAAAA,IAAI,EAACH;AAAN,CAAL,CAAf;AACP,OAAO,MAAMI,QAAQ,GAAC,OAAK;AAACD,EAAAA,IAAI,EAACF;AAAN,CAAL,CAAf;AACP,OAAO,MAAMI,OAAO,GAACC,IAAI,KAAG;AAACH,EAAAA,IAAI,EAACJ,QAAN;AAAeO,EAAAA;AAAf,CAAH,CAAlB,C,CAA2C;;AAElD,MAAMC,YAAY,GAAE;AAClBC,EAAAA,MAAM,EAAC,CADW;AAElBF,EAAAA,IAAI,EAAC;AAFa,CAApB;AAKA,eAAe,SAASG,OAAT,CAAiBC,KAAK,GAACH,YAAvB,EAAoCI,MAApC,EAA2C;AACxD,UAAOA,MAAM,CAACR,IAAd;AACE,SAAKJ,QAAL;AACE,+BACKW,KADL;AAEEJ,QAAAA,IAAI,EAAEK,MAAM,CAACL,IAFf,CAEmB;;AAFnB;;AAIA,SAAKN,QAAL;AACE,+BACKU,KADL;AAEEF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,GAAeE,KAAK,CAACJ;AAF/B;;AAIA,SAAKL,QAAL;AACE,+BACKS,KADL;AAEEF,QAAAA,MAAM,EAACE,KAAK,CAACF,MAAN,GAAeE,KAAK,CAACJ;AAF9B;;AAIJ;AACE,aAAOI,KAAP;AAjBN;AAoBD","sourcesContent":["const SET_DIFF = 'counter/SET_DIFF';//ducks패턴을 사용하는경우 문자열 앞에 접두사를 다른 모듈과 중뵥을 막기 위해\nconst INCREASE='counter/INCREASE';\nconst DECREASE='counter/DECREASE';\n\nexport const increase=()=>({type:INCREASE});\nexport const decrease=()=>({type:DECREASE});\nexport const setDiff=diff=>({type:SET_DIFF,diff});//diff는 한번에 증가시킬 숫자를 의미한다.\n\nconst initialState ={\n  number:0,\n  diff:1\n}\n\nexport default function counter(state=initialState,action){\n  switch(action.type){\n    case SET_DIFF:\n      return {\n        ...state,\n        diff: action.diff//action생성함수에 있는 diff을 받아서 더해주겠다.\n      }\n      case INCREASE:\n        return {\n          ...state,\n          number: state.number + state.diff\n        }\n        case DECREASE:\n          return {\n            ...state,\n            number:state.number - state.diff\n          }\n      default:\n        return state;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}