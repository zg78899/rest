{"ast":null,"code":"var _jsxFileName = \"/Users/pokeoseu/Desktop/React-Self-Study/study/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { debounce } from 'lodash';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport Nav from './Component/Nav/Nav';\nimport SearchBar from './Component/SearchBar/SearchBar';\nimport { spinner } from './Component/images';\nimport VideoList from './Component/VideoList/VideoList';\nimport VideoListItem from './Component/VideoListItem/VideoListItem';\nimport VideoPlayer from './Component/VideoPlayer/VideoPlayer'; // import VideoPlayer from './Component/VideoPlayer/VideoPlayer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videos: [],\n      selectedVideo: null,\n      query: '',\n      nextPageToken: null\n    }; // Object.getOwnPropertyNames(App.prototype).forEach(key => this[key] = this[key].bind(this));\n\n    this.getYouTubeData = this.getYouTubeData.bind(this);\n    this.defaultState = this.state;\n  }\n\n  async getYouTubeData(query) {\n    if (!query) return;\n\n    if (this.state.query !== query) {\n      this.setState(this.defaultState);\n    }\n\n    const nextPageToken = this.state.nextPageToken;\n    const params = {\n      key: 'AIzaSyDFjSfrtwzoi9XHarGiQb7RB2x2UEayGIo',\n      q: query,\n      part: 'snippet',\n      maxResult: 10,\n      pageToken: nextPageToken\n    };\n\n    const _ref = await axios.get('https://www.googleapis.com/youtube/v3/search', {\n      params\n    }),\n          data = _ref.data;\n\n    this.setState({\n      videos: [...this.state.videos, ...data.items],\n      query,\n      nextPageToken: data.nextPageToken\n    }, () => console.log('ab', data));\n  }\n\n  componentWillMount() {\n    this.setState(this.getYouTubeData('여행'));\n  } // setSelectVideo(id) {\n  //   this.setState({selectedVideo : id});\n  // }\n\n\n  render() {\n    const selectedVideo = this.state.selectedVideo;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onSearchVideo: debounce(this.getYouTubeData, 500),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(InfiniteScroll // loadMore={()=>this.getYouTubeData(this.state.query)}\n    , {\n      hasMore: !!this.state.nextPageToken && !this.state.selectedVideo,\n      loader: React.createElement(\"div\", {\n        key: uuid.v4(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: spinner,\n        alt: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, selectedVideo ? React.createElement(VideoPlayer, {\n      videoId: selectedVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) : React.createElement(VideoList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(VideoListItem, Object.assign({}, this.state, {\n      key: uuid.v4(),\n      onVideoSelect: selectedVideo => this.setState({\n        selectedVideo\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pokeoseu/Desktop/React-Self-Study/study/src/App.js"],"names":["React","Component","debounce","axios","uuid","InfiniteScroll","Nav","SearchBar","spinner","VideoList","VideoListItem","VideoPlayer","App","constructor","props","state","videos","selectedVideo","query","nextPageToken","getYouTubeData","bind","defaultState","setState","params","key","q","part","maxResult","pageToken","get","data","items","console","log","componentWillMount","render","v4"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {debounce} from 'lodash';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport Nav from './Component/Nav/Nav';\nimport SearchBar from './Component/SearchBar/SearchBar'\nimport {spinner} from './Component/images';\nimport VideoList from './Component/VideoList/VideoList';\nimport VideoListItem from './Component/VideoListItem/VideoListItem';\nimport VideoPlayer from './Component/VideoPlayer/VideoPlayer';\n// import VideoPlayer from './Component/VideoPlayer/VideoPlayer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      videos: [],\n      selectedVideo: null,\n      query: '',\n      nextPageToken: null\n    }\n    // Object.getOwnPropertyNames(App.prototype).forEach(key => this[key] = this[key].bind(this));\n    this.getYouTubeData = this.getYouTubeData.bind(this);\n    this.defaultState = this.state;\n  }\n\n  async getYouTubeData(query) {  \n    if (!query) return;\n    if (this.state.query !== query) {\n      this.setState(this.defaultState);\n    }\n    const { nextPageToken } = this.state;\n    const params = {\n      key: 'AIzaSyDFjSfrtwzoi9XHarGiQb7RB2x2UEayGIo',\n      q: query,\n      part: 'snippet',\n      maxResult:10,\n      pageToken: nextPageToken\n    }\n    const { data } = await axios.get('https://www.googleapis.com/youtube/v3/search', { params });\n    this.setState ({\n      videos: [...this.state.videos, ...data.items],\n      query,\n      nextPageToken: data.nextPageToken\n    },() => console.log('ab', data))\n  }\n\n  componentWillMount(){\n    this.setState(this.getYouTubeData('여행'))\n  }\n\n  // setSelectVideo(id) {\n  //   this.setState({selectedVideo : id});\n  // }\n\n  render() {\n    const {selectedVideo}=this.state;\n    return (\n      <div className=\"App\">\n        <Nav>\n          <SearchBar onSearchVideo={debounce(this.getYouTubeData,500)}/>\n        </Nav>\n        <InfiniteScroll\n        // loadMore={()=>this.getYouTubeData(this.state.query)}\n        hasMore={!!this.state.nextPageToken && !this.state.selectedVideo}\n        loader={\n          <div key={uuid.v4()}>\n            <img src={spinner} alt=\"loading\"/>\n          </div>\n        }\n        >\n        {\n        selectedVideo\n        ?<VideoPlayer videoId={selectedVideo}/>\n        :<VideoList \n           >\n          <VideoListItem {...this.state} key={uuid.v4()} onVideoSelect={selectedVideo=>this.setState({selectedVideo})}/>\n        </VideoList>\n        }\n        </InfiniteScroll>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}