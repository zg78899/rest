{"ast":null,"code":"import _slicedToArray from \"/Users/pokeoseu/Desktop/React-Self-Study/api-integrate/api/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pokeoseu/Desktop/React-Self-Study/api-integrate/api/src/Users.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Users() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      //useEffect을 사용하여 컴포넌트가 가장 처음에 렌더링이 될때 fetchUsers라는 함수를 호출한다.\n      try {\n        setUsers(null);\n        setError(null); //두가지 값을 초기화\n\n        setLoading(true); //로딩이 시작되었다는 것을 의미한다.\n\n        const response = await axios.get('http://jsonplaceholder.typicode.com/users/asdas');\n        setUsers(response.data); //응답의 결과값을 보기위해,요청이 성공하면 setUsers의 값으로 설정을 해준다.setUsers 값을 바꾼다.\n      } catch (e) {\n        console.log(e.response.status);\n        setError(e); //error가 발생하면 에러의 값을 바꾼다.\n      }\n\n      setLoading(false); //제일 마지막으로 로딩이 끝났다는 것을 알려야 한다.\n    };\n\n    fetchUsers();\n  }, []); //그다음에는 세가지 상태에 따라 다른 값을 렌더링 할 것이다.\n\n  if (loading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\uB85C\\uB529\\uC911...\");\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"\\uC5D0\\uB7EC \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\");\n  if (!users) return null; //users에 제대로된 값이 들어가지않았을때\n  //users에 제대로된값이 들어갔을 경우에\n\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, users.map(user => React.createElement(\"li\", {\n    key: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, user.username, \"(\", user.name, \")\")));\n}\n\nexport default Users;","map":{"version":3,"sources":["/Users/pokeoseu/Desktop/React-Self-Study/api-integrate/api/src/Users.js"],"names":["React","useState","useEffect","axios","Users","users","setUsers","loading","setLoading","error","setError","fetchUsers","response","get","data","e","console","log","status","map","user","id","username","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,GAAiB;AAAA,oBACWH,QAAQ,CAAC,IAAD,CADnB;AAAA;AAAA,QACRI,KADQ;AAAA,QACDC,QADC;;AAAA,qBAEeL,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,QAERM,OAFQ;AAAA,QAECC,UAFD;;AAAA,qBAGWP,QAAQ,CAAC,IAAD,CAHnB;AAAA;AAAA,QAGRQ,KAHQ;AAAA,QAGDC,QAHC;;AAKfR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAG,YAAY;AAAC;AAC9B,UAAI;AACFL,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,QAAAA,QAAQ,CAAC,IAAD,CAAR,CAFE,CAEa;;AACfF,QAAAA,UAAU,CAAC,IAAD,CAAV,CAHE,CAGe;;AAEjB,cAAMI,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,iDAAV,CAAvB;AACAP,QAAAA,QAAQ,CAACM,QAAQ,CAACE,IAAV,CAAR,CANE,CAMqB;AAExB,OARD,CAQE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACH,QAAF,CAAWM,MAAvB;AAEAR,QAAAA,QAAQ,CAACK,CAAD,CAAR,CAHU,CAGE;AACb;;AACDP,MAAAA,UAAU,CAAC,KAAD,CAAV,CAd6B,CAcZ;AAClB,KAfD;;AAgBAG,IAAAA,UAAU;AACX,GAlBQ,EAkBN,EAlBM,CAAT,CALe,CAyBf;;AACA,MAAIJ,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACb,MAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAAP;AACX,MAAI,CAACJ,KAAL,EAAY,OAAO,IAAP,CA5BG,CA4BS;AAExB;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,KAAK,CAACc,GAAN,CAAUC,IAAI,IAAI;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAChBD,IAAI,CAACE,QADW,OACAF,IAAI,CAACG,IADL,MAAlB,CADD,CADF;AAOD;;AACD,eAAenB,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Users() {\n  const [users, setUsers] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchUsers = async () => {//useEffect을 사용하여 컴포넌트가 가장 처음에 렌더링이 될때 fetchUsers라는 함수를 호출한다.\n      try {\n        setUsers(null);\n        setError(null);//두가지 값을 초기화\n        setLoading(true);//로딩이 시작되었다는 것을 의미한다.\n\n        const response = await axios.get('http://jsonplaceholder.typicode.com/users/asdas');\n        setUsers(response.data)//응답의 결과값을 보기위해,요청이 성공하면 setUsers의 값으로 설정을 해준다.setUsers 값을 바꾼다.\n\n      } catch (e) {\n        console.log(e.response.status);\n        \n        setError(e);//error가 발생하면 에러의 값을 바꾼다.\n      }\n      setLoading(false)//제일 마지막으로 로딩이 끝났다는 것을 알려야 한다.\n    }\n    fetchUsers();\n  }, []);\n\n  //그다음에는 세가지 상태에 따라 다른 값을 렌더링 할 것이다.\n  if (loading) return <div>로딩중...</div>\n  if (error) return <div>에러 발생했습니다.</div>\n  if (!users) return null;//users에 제대로된 값이 들어가지않았을때\n\n  //users에 제대로된값이 들어갔을 경우에\n  return (\n    <ul>\n    {users.map(user => <li key={user.id}>\n      {user.username}({user.name})\n  </li>)}\n  </ul>\n  )\n}\nexport default Users;"]},"metadata":{},"sourceType":"module"}