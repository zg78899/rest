{"ast":null,"code":"var _jsxFileName = \"/Users/pokeoseu/Desktop/React-Self-Study/YouTube-self/self/src/Main.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Nav from './component/Nav/Nav';\nimport SearchBar from './component/SearchBar/SearchBar';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport uuid from 'uuid';\nimport { spinner1 } from './component/images/';\nimport VideoList from './component/VideoList/VideoList';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { debounce } from 'lodash';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updateQuery } from './actions';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this._getYoutubeData = debounce(async (query, isChanged) => {\n      try {\n        if (isChanged) {\n          this.setState(this.defaultState);\n        }\n\n        if (!query) return; // if (this.state.query !== query) {\n        //   this.setState(this.defaultState);\n        //   setTimeout(()=>{\n        //     this.props.history.push(`/results?search_query=${query}`)\n        //   },0);\n        // }\n\n        const nextPageToken = this.state.nextPageToken;\n        const params = {\n          key: process.env.REACT_APP_YOUTUBE_API_KEY,\n          q: query,\n          part: 'snippet',\n          maxResults: 10,\n          pageToken: nextPageToken\n        };\n\n        const _ref = await axios.get(`https://www.googleapis.com/youtube/v3/search`, {\n          params\n        }),\n              data = _ref.data;\n\n        this.setState({\n          videos: [...this.state.videos, ...data.items],\n          // query,\n          nextPageToken: data.nextPageToken\n        });\n      } catch (e) {}\n    }, 500);\n    this.state = {\n      videos: [],\n      // query: this.props.query,\n      selectedVideos: null,\n      nextPageToken: null\n    };\n    Object.getOwnPropertyNames(Main.prototype).forEach(key => this[key] = this[key].bind(this));\n    this.defaultState = this.state;\n  }\n\n  getYoutubeData(query) {\n    let isChanged = false;\n\n    if (this.props.query !== query) {\n      isChanged = true;\n      this.props.updateQuery(query);\n    }\n\n    this._getYoutubeData(query, isChanged);\n  }\n\n  componentDidMount() {\n    const props = this.props;\n\n    if (props.location) {\n      const _qs$parse = qs.parse(props.location.search),\n            search_query = _qs$parse.search_query;\n\n      if (search_query) this.getYoutubeData(search_query || '');\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const props = this.props;\n\n    if (props.location) {\n      const _qs$parse2 = qs.parse(props.location.search),\n            search_query = _qs$parse2.search_query;\n\n      const _qs$parse3 = qs.parse(prevProps.location.search),\n            prev = _qs$parse3.search_query;\n\n      if (search_query !== prev) this.getYoutubeData(search_query || '');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.props.query, React.createElement(SearchBar, {\n      onSearchVideos: e => {\n        this.props.history.push(`/results?search_query=${e}`);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(InfiniteScroll // loadMore={() => this.getYoutubeData(this.props.query)}\n    , {\n      hasMore: !!this.state.nextPageToken && !this.state.selectedVideos,\n      loader: React.createElement(\"div\", {\n        key: uuid.v4(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: spinner1,\n        alt: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(VideoList, Object.assign({}, this.state, {\n      onVideoSelect: selectedVideos => this.props.history.push(`/watch?v=${selectedVideos}`),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    query: state.videos.query\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateQuery\n  }, dispatch);\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","map":{"version":3,"sources":["/Users/pokeoseu/Desktop/React-Self-Study/YouTube-self/self/src/Main.js"],"names":["React","axios","Nav","SearchBar","InfiniteScroll","uuid","spinner1","VideoList","qs","withRouter","debounce","connect","bindActionCreators","updateQuery","Main","Component","constructor","props","_getYoutubeData","query","isChanged","setState","defaultState","nextPageToken","state","params","key","process","env","REACT_APP_YOUTUBE_API_KEY","q","part","maxResults","pageToken","get","data","videos","items","e","selectedVideos","Object","getOwnPropertyNames","prototype","forEach","bind","getYoutubeData","componentDidMount","location","parse","search","search_query","componentDidUpdate","prevProps","prevState","prev","render","history","push","v4","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Nav from './component/Nav/Nav';\nimport SearchBar from './component/SearchBar/SearchBar';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport uuid from 'uuid';\nimport {spinner1} from './component/images/'\nimport VideoList from './component/VideoList/VideoList';\n\nimport qs from 'qs';\nimport {withRouter} from 'react-router-dom';\nimport {debounce} from 'lodash';\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {updateQuery} from './actions';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      videos: [],\n      // query: this.props.query,\n      selectedVideos: null,\n      nextPageToken: null\n    }\n    Object.getOwnPropertyNames(Main.prototype).forEach(key => this[key] = this[key].bind(this));\n\n    this.defaultState = this.state;\n\n  }\n   _getYoutubeData=debounce(async (query,isChanged)=> {\n    try{\n      if(isChanged){\n        this.setState(this.defaultState);\n      }\n      if(!query) return;\n      // if (this.state.query !== query) {\n      //   this.setState(this.defaultState);\n      //   setTimeout(()=>{\n      //     this.props.history.push(`/results?search_query=${query}`)\n      //   },0);\n      // }\n      const { nextPageToken } = this.state;\n  \n      const params = {\n        key: process.env.REACT_APP_YOUTUBE_API_KEY,\n        q: query,\n        part: 'snippet',\n        maxResults:10,\n        pageToken: nextPageToken\n      }\n      const { data } = await axios.get(`https://www.googleapis.com/youtube/v3/search`, { params });\n      this.setState({\n        videos: [ ...this.state.videos, ...data.items ],\n        // query,\n        nextPageToken: data.nextPageToken\n      });\n    }catch(e){}\n    \n  },500)\n\n  getYoutubeData(query){\n    let isChanged=false;\n    if(this.props.query !== query){\n      isChanged=true;\n      this.props.updateQuery(query);\n    }\n    this._getYoutubeData(query,isChanged);\n  }\n\n   componentDidMount() {\n    const {props}=this;\n    if(props.location){\n      const {search_query}=qs.parse(props.location.search);\n      if(search_query)this.getYoutubeData( search_query || '' );\n\n    }\n  }\n  componentDidUpdate(prevProps,prevState,){\n    const {props}=this;\n    if(props.location){\n      const {search_query}=qs.parse(props.location.search);\n      const {search_query:prev} =qs.parse(prevProps.location.search);\n      if(search_query !== prev) this.getYoutubeData(search_query || '');\n    }\n\n  }\n  render() {\n    return (\n      <div>\n        <Nav>\n          {this.props.query}\n          <SearchBar onSearchVideos={e=>{\n            this.props.history.push(`/results?search_query=${e}`)\n          }} />\n        </Nav>\n\n        <InfiniteScroll\n          // loadMore={() => this.getYoutubeData(this.props.query)}\n          hasMore={!!this.state.nextPageToken && !this.state.selectedVideos}\n          loader={\n            <div key={uuid.v4()} >\n              <img src={spinner1} alt=\"loading\"/>\n            </div>\n          }\n            >\n              <VideoList\n                {...this.state} onVideoSelect={selectedVideos=>this.props.history.push(`/watch?v=${selectedVideos}`)}\n              />\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state){\n  return {\n    query:state.videos.query\n  }\n}\nfunction mapDispatchToProps(dispatch){\n  return bindActionCreators({updateQuery},dispatch)\n}\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\n"]},"metadata":{},"sourceType":"module"}