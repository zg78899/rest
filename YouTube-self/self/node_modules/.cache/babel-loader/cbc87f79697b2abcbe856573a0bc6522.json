{"ast":null,"code":"var _jsxFileName = \"/Users/pokeoseu/Desktop/React-Self-Study/YouTube-self/self/src/component/SearchBar/SearchBar.jsx\";\nimport React from \"react\";\nimport \"./search_bar.css\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updateQuery } from '../../actions';\n\nconst SearchBar = props => {\n  const handleEnter = search => e => {\n    if (e.key === \"Enter\") {\n      search(e.target.value);\n    }\n  };\n\n  let input;\n  return React.createElement(\"div\", {\n    className: \"search-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: ref => input = ref,\n    type: \"search\" // value={props.query)}//props의 query값만 유일한 값이된다.updateQuery e.target.value로 들어간다.\n    ,\n    Value: props.query || '' //undefined 방지 빈문자열,초기값을 정의함//value={props.query}props의 query가 바뀌면 바뀌어버린다.실제값으로 고정되어버린다./ ,정의를 안하면 주소값으로 바로 접근을 못하게 된다.\n    // defaultValue={props.query}\n    // onChange={e =>{\n    //   // props.updateQuery(e.target.value)\n    //   props.onSearchVideos(e.target.value)\n    // }}\n    ,\n    onKeyPress: handleEnter(props.onSearchVideos),\n    className: \"search-bar\",\n    placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => props.onSearchVideos(input.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    focusable: \"false\",\n    className: \"yt-icon\",\n    style: {\n      pointerEvents: \"none\",\n      display: \"block\",\n      height: \"15px\",\n      width: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"yt-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\",\n    className: \"style-scope yt-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })))));\n};\n\nfunction mapStatetoProps(state) {\n  return {\n    query: state.videos.query\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    //무조건 aciton에 있는 함수를 가져옴\n    updateQuery\n  }, dispatch);\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(SearchBar);","map":{"version":3,"sources":["/Users/pokeoseu/Desktop/React-Self-Study/YouTube-self/self/src/component/SearchBar/SearchBar.jsx"],"names":["React","connect","bindActionCreators","updateQuery","SearchBar","props","handleEnter","search","e","key","target","value","input","ref","query","onSearchVideos","pointerEvents","display","height","width","mapStatetoProps","state","videos","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAkC,OAAlC;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,WAAW,GAAGC,MAAM,IAAIC,CAAC,IAAI;AACjC,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBF,MAAAA,MAAM,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CAAN;AACD;AACF,GAJD;;AAMA,MAAIC,KAAJ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEC,GAAG,IAAKD,KAAK,GAAGC,GADvB;AAEE,IAAA,IAAI,EAAC,QAFP,CAGE;AAHF;AAIE,IAAA,KAAK,EAAER,KAAK,CAACS,KAAN,IAAe,EAJxB,CAI2B;AACzB;AACA;AACA;AACA;AACA;AATF;AAUE,IAAA,UAAU,EAAER,WAAW,CAACD,KAAK,CAACU,cAAP,CAVzB;AAWE,IAAA,SAAS,EAAC,YAXZ;AAYE,IAAA,WAAW,EAAC,yDAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAeE;AAAQ,IAAA,OAAO,EAAE,MAAMV,KAAK,CAACU,cAAN,CAAqBH,KAAK,CAACD,KAA3B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,mBAAmB,EAAC,eAFtB;AAGE,IAAA,SAAS,EAAC,OAHZ;AAIE,IAAA,SAAS,EAAC,SAJZ;AAKE,IAAA,KAAK,EAAE;AACLK,MAAAA,aAAa,EAAE,MADV;AAELC,MAAAA,OAAO,EAAE,OAFJ;AAGLC,MAAAA,MAAM,EAAE,MAHH;AAILC,MAAAA,KAAK,EAAE;AAJF,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,CAAC,EAAC,4OADJ;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CADF,CAfF,CADF;AAuCD,CA/CD;;AAiDA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAC7B,SAAO;AACLP,IAAAA,KAAK,EAACO,KAAK,CAACC,MAAN,CAAaR;AADd,GAAP;AAGD;;AACD,SAASS,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAOtB,kBAAkB,CAAC;AAAC;AACzBC,IAAAA;AADwB,GAAD,EAEvBqB,QAFuB,CAAzB;AAGD;;AACD,eAAevB,OAAO,CAACmB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CnB,SAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport \"./search_bar.css\";\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators} from 'redux';\nimport {updateQuery} from '../../actions';\n\nconst SearchBar = props => {\n  const handleEnter = search => e => {\n    if (e.key === \"Enter\") {\n      search(e.target.value);\n    }\n  };\n\n  let input;\n  return (\n    <div className=\"search-wrapper\">\n      <input\n        ref={ref => (input = ref)}\n        type=\"search\"\n        // value={props.query)}//props의 query값만 유일한 값이된다.updateQuery e.target.value로 들어간다.\n        Value={props.query || ''}//undefined 방지 빈문자열,초기값을 정의함//value={props.query}props의 query가 바뀌면 바뀌어버린다.실제값으로 고정되어버린다./ ,정의를 안하면 주소값으로 바로 접근을 못하게 된다.\n        // defaultValue={props.query}\n        // onChange={e =>{\n        //   // props.updateQuery(e.target.value)\n        //   props.onSearchVideos(e.target.value)\n        // }}\n        onKeyPress={handleEnter(props.onSearchVideos)}\n        className=\"search-bar\"\n        placeholder=\"검색어를 입력하세요\"\n      />\n      <button onClick={() => props.onSearchVideos(input.value)}>\n        <svg\n          viewBox=\"0 0 24 24\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          focusable=\"false\"\n          className=\"yt-icon\"\n          style={{\n            pointerEvents: \"none\",\n            display: \"block\",\n            height: \"15px\",\n            width: \"20px\",\n          }}\n        >\n          <g className=\"yt-icon\">\n            <path\n              d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n              className=\"style-scope yt-icon\"\n            />\n          </g>\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nfunction mapStatetoProps(state){\n  return {\n    query:state.videos.query\n  }\n}\nfunction mapDispatchToProps(dispatch){\n  return bindActionCreators({//무조건 aciton에 있는 함수를 가져옴\n    updateQuery\n  },dispatch)\n}\nexport default connect(mapStatetoProps,mapDispatchToProps)(SearchBar);\n"]},"metadata":{},"sourceType":"module"}