{"ast":null,"code":"var _jsxFileName = \"/Users/pokeoseu/Desktop/React-Self-Study/YouTube-self/self/src/Main.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Nav from './component/Nav/Nav';\nimport SearchBar from './component/SearchBar/SearchBar';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport uuid from 'uuid';\nimport { spinner1 } from './component/images/';\nimport VideoList from './component/VideoList/VideoList';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { debounce } from 'lodash';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updateQuery } from './actions';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this._getYoutubeData = debounce(async (query, isChanged) => {\n      try {\n        if (isChanged) {\n          this.setState(this.defaultState);\n        }\n\n        if (!query) return; // if (this.state.query !== query) {\n        //   this.setState(this.defaultState);\n        //   setTimeout(()=>{\n        //     this.props.history.push(`/results?search_query=${query}`)\n        //   },0);\n        // }\n\n        const nextPageToken = this.state.nextPageToken;\n        const params = {\n          key: process.env.REACT_APP_YOUTUBE_API_KEY,\n          q: query,\n          part: 'snippet',\n          maxResults: 10,\n          pageToken: nextPageToken\n        };\n        console.log('data');\n\n        const _ref = await axios.get(`https://www.googleapis.com/youtube/v3/search`, {\n          params\n        }),\n              data = _ref.data;\n\n        console.log('data');\n        this.setState({\n          videos: [...this.state.videos, ...data.items],\n          // query,\n          nextPageToken: data.nextPageToken\n        });\n      } catch (e) {}\n    }, 500);\n    Object.getOwnPropertyNames(Main.prototype).forEach(key => this[key] = this[key].bind(this));\n    this.state = {\n      videos: [],\n      // query: this.props.query,\n      // selectedVideos: null,\n      nextPageToken: null\n    };\n    this.defaultState = this.state;\n  }\n\n  getYoutubeData(query) {\n    let isChanged = false;\n\n    if (this.props.query !== query) {\n      isChanged = true;\n      this.props.updateQuery(query);\n    }\n\n    this._getYoutubeData(query, isChanged);\n  }\n\n  componentDidMount() {\n    const props = this.props;\n\n    if (props.location) {\n      const _qs$parse = qs.parse(props.location.search),\n            search_query = _qs$parse.search_query;\n\n      if (search_query) this.getYoutubeData(search_query || '');\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const props = this.props;\n\n    if (props.location) {\n      const _qs$parse2 = qs.parse(props.location.search),\n            search_query = _qs$parse2.search_query;\n\n      const _qs$parse3 = qs.parse(prevProps.location.search),\n            prev = _qs$parse3.search_query;\n\n      if (search_query !== prev) this.getYoutubeData(search_query || '');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.query, React.createElement(SearchBar, {\n      onSearchVideos: e => {\n        this.props.history.push(`/results?search_query=${e}`);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(InfiniteScroll // loadMore={() => this.getYoutubeData(this.props.query)}\n    , {\n      hasMore: !!this.state.nextPageToken && !this.state.selectedVideos,\n      loader: React.createElement(\"div\", {\n        key: uuid.v4(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: spinner1,\n        alt: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(VideoList, Object.assign({}, this.state, {\n      onVideoSelect: selectedVideos => this.props.history.push(`/watch?v=${selectedVideos}`),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    query: state.videos.query\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateQuery\n  }, dispatch);\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","map":{"version":3,"sources":["/Users/pokeoseu/Desktop/React-Self-Study/YouTube-self/self/src/Main.js"],"names":["React","axios","Nav","SearchBar","InfiniteScroll","uuid","spinner1","VideoList","qs","withRouter","debounce","connect","bindActionCreators","updateQuery","Main","Component","constructor","props","_getYoutubeData","query","isChanged","setState","defaultState","nextPageToken","state","params","key","process","env","REACT_APP_YOUTUBE_API_KEY","q","part","maxResults","pageToken","console","log","get","data","videos","items","e","Object","getOwnPropertyNames","prototype","forEach","bind","getYoutubeData","componentDidMount","location","parse","search","search_query","componentDidUpdate","prevProps","prev","render","history","push","selectedVideos","v4","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Nav from './component/Nav/Nav';\nimport SearchBar from './component/SearchBar/SearchBar';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport uuid from 'uuid';\nimport { spinner1 } from './component/images/'\nimport VideoList from './component/VideoList/VideoList';\n\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\n\nimport {debounce} from 'lodash';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { updateQuery } from './actions';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    Object.getOwnPropertyNames(Main.prototype).forEach(key => this[key] = this[key].bind(this));\n    this.state = {\n      videos: [],\n      // query: this.props.query,\n      // selectedVideos: null,\n      nextPageToken: null\n    }\n    this.defaultState = this.state;\n  }\n    _getYoutubeData = debounce(async (query, isChanged)=> {\n    try {\n      if (isChanged) {\n        this.setState(this.defaultState);\n      }\n      if (!query) return;\n      // if (this.state.query !== query) {\n      //   this.setState(this.defaultState);\n      //   setTimeout(()=>{\n      //     this.props.history.push(`/results?search_query=${query}`)\n      //   },0);\n      // }\n      const { nextPageToken } = this.state;\n      const params = {\n        key: process.env.REACT_APP_YOUTUBE_API_KEY,\n        q: query,\n        part: 'snippet',\n        maxResults: 10,\n        pageToken: nextPageToken\n      }\n      console.log('data');\n      const { data } = await axios.get(`https://www.googleapis.com/youtube/v3/search`, { params });\n      console.log('data');\n      this.setState({\n        videos: [...this.state.videos, ...data.items],\n        // query,\n        nextPageToken: data.nextPageToken\n      });\n    }catch(e){}\n  },500);\n\n  getYoutubeData(query) {\n    let isChanged = false;\n    if (this.props.query !== query) {\n      isChanged = true;\n      this.props.updateQuery(query);\n    }\n    this._getYoutubeData(query,isChanged);\n  }\n\n  componentDidMount() {\n    const { props } = this;\n    if (props.location) {\n      const { search_query } = qs.parse(props.location.search);\n      if (search_query) this.getYoutubeData(search_query || '');\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { props } = this;\n    if (props.location) {\n      const { search_query } = qs.parse(props.location.search);\n      const { search_query: prev } = qs.parse(prevProps.location.search);\n      if (search_query !== prev) this.getYoutubeData(search_query || '');\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav>\n          {this.props.query}\n          <SearchBar onSearchVideos={e => {\n            this.props.history.push(`/results?search_query=${e}`)\n          }} />\n        </Nav>\n        <InfiniteScroll\n          // loadMore={() => this.getYoutubeData(this.props.query)}\n          hasMore={!!this.state.nextPageToken && !this.state.selectedVideos}\n          loader={\n            <div key={uuid.v4()} >\n              <img src={spinner1} alt=\"loading\" />\n            </div>\n          }\n        >\n          <VideoList\n            {...this.state} onVideoSelect={selectedVideos => this.props.history.push(`/watch?v=${selectedVideos}`)}\n          />\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    query: state.videos.query\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ updateQuery }, dispatch)\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n"]},"metadata":{},"sourceType":"module"}